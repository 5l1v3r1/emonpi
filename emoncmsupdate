#!/bin/bash

echo
echo "==========================================="
echo "Emoncms update started"
echo "Emoncms update script V1.2.1 (6th Feb 2019)"
date
echo "==========================================="
echo
username="pi"
homedir="/home/$username"

echo "username: $username"
echo

echo "Checking environment:"

# Check that specified user directory exists
if [ -d $homedir ]; then 
    echo "- User directory $homedir found"
else 
    echo "- User directory $homedir not found (please ammend username)"
    exit 0
fi

emonSD_pi_env=0
# Check for pi user
pi=$(id -u pi)
if [ $pi ] && [ -d /home/pi ]; then
  echo "- pi user and pi user directory found"
  emonSD_pi_env=1
else 
  echo "- could not find pi user or pi user directory"
  emonSD_pi_env=0
fi

# Check emonSD version
image_version=$(ls /boot | grep emonSD)

if [ "$image_version" = "" ]; then
    echo "- Could not find emonSD version file"
    emonSD_pi_env=0
else 
    echo "- emonSD version: $image_version"
fi

if [ "$emonSD_pi_env" = "0" ]; then
    echo "- Assuming non emonSD install"
fi

# Check emoncms directory
if [ -d /var/www/emoncms ]; then
    emoncms_dir="/var/www/emoncms"
else
    if [ -d /var/www/html/emoncms ]; then
        emoncms_dir="/var/www/html/emoncms"
    else
        echo "emoncms directory not found"
        exit 0
    fi
fi
echo "- emoncms directory: $emoncms_dir"

echo
uid=`id -u`
echo "EUID: $uid"

if [ "$uid" = "0" ] ; then
    # update is being ran mistakenly as root, switch to user
    echo "update running as root: switching to $username user & restarting script"
    echo
    echo "**MANUAL SYSTEM REBOOT REQUIRED**"
    echo
    echo "Please reboot and run update again"
    su -c $0 $username
    exit
fi

#########################################################################################
if [ "$emonSD_pi_env" = "1" ]; then 

    # Install sudoers entry to enable emoncms reboot button
    if [ ! -f /etc/sudoers.d/emoncms-rebootbutton ]; then
        # double check correct sudo syntax
        sudo visudo -cf $homedir/emonpi/emoncms-rebootbutton && \
        sudo cp $homedir/emonpi/emoncms-rebootbutton /etc/sudoers.d/
        sudo chmod 0440 /etc/sudoers.d/emoncms-rebootbutton
        echo
        echo "Install emonPi Emoncms admin reboot button sudoers entry"
    fi

    #########################################################################################
    # Install sudoers entry to enable toggling file-system RO/RW mount via Emoncms admin

    if [ ! -f /etc/sudoers.d/emoncms-filesystem ]; then
        # double check correct sudo syntax
        sudo visudo -cf $homedir/emonpi/emoncms-filesystem && \
        sudo cp $homedir/emonpi/emoncms-filesystem /etc/sudoers.d/
        sudo chmod 0440 /etc/sudoers.d/emoncms-filesystem
        echo
        echo "emonPi Emoncms admin file-system toggle buttons sudoers entry installed"
    fi
fi
#########################################################################################
# Install sudoers entry to enable emonhub reboot button

# double check correct sudo syntax
sudo visudo -cf $homedir/emonpi/emonhub-sudoers && \
sudo cp $homedir/emonpi/emonhub-sudoers /etc/sudoers.d/
sudo chmod 0440 /etc/sudoers.d/emonhub-sudoers
echo
echo "emonhub service control sudoers entry installed"


#########################################################################################
# Install sudoers entry for WiFI AP

if [ ! -f /etc/sudoers.d/emoncms-setup-sudoers ]; then
    # double check correct sudo syntax
    sudo visudo -cf $homedir/emonpi/emoncms-setup/emoncms-setup-sudoers && \
    sudo cp $homedir/emonpi/emoncms-setup/emoncms-setup-sudoers /etc/sudoers.d/
    sudo chmod 0440 /etc/sudoers.d/emoncms-setup-sudoers
    echo
    echo "Emoncms setup module sudoers entry installed"
fi

#########################################################################################

# Setup user group to enable reading GPU temperature (pi only)
#https://github.com/emoncms/emoncms/pull/869
if [ "$emonSD_pi_env" = "1" ]; then 
    sudo usermod -a -G video www-data
fi

# Add www-data to systemd group to enable read logfiles e.g emonhub 
sudo usermod -a -G systemd-journal www-data
groups www-data

#########################################################################################
# Record current state of emoncms settings.php
echo
current_settings_md5="$($homedir/emonpi/./md5sum.py $emoncms_dir/settings.php)"
echo "current settings.php md5: $current_settings_md5"

current_default_settings_md5="$($homedir/emonpi/md5sum.py $emoncms_dir/default.emonpi.settings.php)"
echo "Default settings.php md5: $current_default_settings_md5"

#########################################################################################

# Pulling in latest Emoncms changes
echo
echo "Checking status of $emoncms_dir git repository"
cd $emoncms_dir
branch=$(git branch | grep \* | cut -d ' ' -f2)
echo "- git branch: $branch"
changes=$(git diff-index --quiet HEAD --)
if $changes; then
    echo "- no local changes"
    echo "- running: git pull origin $branch"
    echo
    git pull origin $branch
else
    echo "- changes"
fi

#########################################################################################
# check to see if user has modifed settings.php and if update is need. Auto apply of possible
echo
new_default_settings_md5="$($homedir/emonpi/md5sum.py $emoncms_dir/default.emonpi.settings.php)"
echo "NEW default settings.php md5: $new_default_settings_md5"

if [ "$current_default_settings_md5" == "$current_settings_md5" ]; then
  echo "settings.php has NOT been user modifed"
  settings_unmodified=true
else
  echo "settings.php HAS been user modified"
  settings_unmodified=false
fi

# check to see if there is an update waiting for settings.php
if [ "$new_default_settings_md5" != "$current_default_settings_md5" ]; then
  echo "Update required to settings.php..."
  if [ $settings_unmodified == true ]; then
    sudo cp $emoncms_dir/default.emonpi.settings.php $emoncms_dir/settings.php
    echo "settings.php autoupdated"
  else
    echo "**ERROR: unable to autoupdate settings.php since user changes are present, manual review required**"
  fi
else
  echo "settings.php not updated"
fi
echo
#########################################################################################
echo "=========================================="
echo "UPDATING EMONCMS MODULES"
echo "=========================================="
echo

# Update modules installed directly in the Modules folder
for M in $emoncms_dir/Modules/*; do
  if [ -d "$M/.git" ]; then
    echo "------------------------------------------"
    echo "Updating $M module"
    echo "------------------------------------------"
    
    branch=$(git -C $M branch | grep \* | cut -d ' ' -f2)
    echo "- git branch: $branch"
    tags=$(git -C $M describe --tags)
    echo "- git tags: $tags"
    
    changes=$(git -C $M diff-index HEAD --)
    if [ "$changes" = "" ]; then
        echo "- no local changes"
        echo "- running: git pull origin $branch"
        echo
        git -C $M pull origin $branch
    else
        echo "- git status:"
        echo
        git -C $M status
        echo
    fi
    
    echo
  fi
done

# Update modules installed in the home/user folder
for module in "postprocess" "sync" "backup"; do

  echo "------------------------------------------"
  echo "Updating $module module"
  echo "------------------------------------------"
  if [ -d $homedir/$module ]; then
    cd $homedir/$module
    branch=$(git branch | grep \* | cut -d ' ' -f2)
    echo "- git branch: $branch"
    tags=$(git describe --tags)
    echo "- git tags: $tags"
    changes=$(git diff-index HEAD --)
    if [ "$changes" = "" ]; then
        echo "- no local changes"
        echo "- running: git pull origin $branch"
        echo
        git pull origin $branch
        # ln -sf $homedir/$module/$module-module $emoncms_dir/Modules/$module
    else
        echo "- git status:"
        echo
        git status
        echo
    fi
  else
    echo "$module module does not exist"
  fi
  echo
done
#########################################################################################
# Automatic installation of new modules if they dont already exist
echo "=========================================="
echo "AUTO INSTALL EMONCMS MODULES"
echo "=========================================="

# Direct installation in Modules folder
for module in "graph" "device"; do
  if ! [ -d $emoncms_dir/Modules/$module ]; then
    echo "- Installing Emoncms $module module https://github.com/emoncms/$module"
    cd $emoncms_dir/Modules
    git clone https://github.com/emoncms/$module
    cd $emoncms_dir/Modules/$module
    if [ `git branch --list stable` ]; then
       echo "-- git checkout stable"
       git checkout stable
    fi
  else
    echo "- $module module already installed"
  fi
done

# Direct installation in Modules folder
for module in "postprocess" "sync" "backup"; do
  if ! [ -d $homedir/$module ]; then
    echo
    echo "- Installing Emoncms $module module https://github.com/emoncms/$module"
    cd $homedir
    git clone https://github.com/emoncms/$module
    ln -s $homedir/$module/$module-module $emoncms_dir/Modules
    cd $homedir/$module/$module-module
    if [ `git branch --list stable` ]; then
       echo "-- git checkout stable"
       git checkout stable
    fi
    echo
  else
    echo "- $module module already installed"
  fi
done
echo
#########################################################################################


if [ "$emonSD_pi_env" = "1" ]; then 
  # Install emoncms-setup module (symlink from emonpi repo)
  if [ -d $homedir/emonpi/emoncms-setup ] && [ ! -d $emoncms_dir/Modules/setup ]; then
    echo "Installing emoncms/emonPi setup module: symlink from ~/emonpi/emoncms-setup"
    ln -s $homedir/emonpi/emoncms-setup $emoncms_dir/Modules/setup
  else
    if [ ! -d $homedir/emonpi/emoncms-setup ]; then
      echo "Cannot find emoncms-setup module, please update ~/emonpi repo"
    fi
  fi
  echo
fi
################################################################################################
# Removal of services
################################################################################################
echo "=========================================="
echo "SERVICES"
echo "=========================================="
# 6th Feb 2019: mqtt_input renamed to emoncms_mqtt
for service in "mqtt_input"; do

  if [ -f /etc/init.d/$service ]; then
    echo "removing initd $service service"
    sudo /etc/init.d/$service stop
    sudo rm /etc/init.d/$service
  fi

  if [ -L /lib/systemd/system/$service.service ] || [ -f /lib/systemd/system/$service.service ]; then
    echo "Removing $service.service"
    sudo systemctl stop $service.service
    sudo systemctl disable $service.service
    sudo rm /lib/systemd/system/$service.service
    sudo systemctl daemon-reload
  fi

  # if the service still exists in /etc then remove it
  if [ -L /etc/systemd/system/$service.service ] || [ -f /etc/systemd/system/$service.service ]; then
    echo "Removing $service.service from /etc/systemd/system"
    sudo rm /etc/systemd/system/$service.service
  fi
  
  # testing on emonpi the above attempts to stop did not work?
  # make sure its dead!!
  sudo pkill -f phpmqtt_input.php
done
################################################################################################
# Installation or correction of services
################################################################################################
for service in "emoncms_mqtt" "feedwriter" "service-runner"; do

  if [ -d /etc/systemd ] && [ -f $emoncms_dir/scripts/services/$service/$service.service ]; then
    if [ -f /etc/init.d/$service ]; then
      echo "removing initd $service service"
      sudo /etc/init.d/$service stop
      sudo rm /etc/init.d/$service
    fi
    
    # service will be symlinked to /etc/systemd/system by "systemctl enable"
    if [ -f /etc/systemd/system/$service.service ]; then
      if ! [ -L /etc/systemd/system/$service.service ]; then
        echo "Removing hard copy of $service.service from /etc/systemd/system (should be symlink)"
        sudo systemctl stop $service.service
        sudo systemctl disable $service.service
        sudo rm /etc/systemd/system/$service.service
        sudo systemctl daemon-reload
      fi
    fi
    
    if [ -f /lib/systemd/system/$service.service ]; then
      if ! [ -L /lib/systemd/system/$service.service ]; then
        echo "Removing hard copy of $service.service in /lib/systemd/system (should be symlink)"
        sudo systemctl stop $service.service
        sudo systemctl disable $service.service
        sudo rm /lib/systemd/system/$service.service
        sudo systemctl daemon-reload
      fi
    fi
    
    if [ ! -f /lib/systemd/system/$service.service ]; then
      echo "Installing $service.service in /lib/systemd/system (creating symlink)"
      sudo ln -s $emoncms_dir/scripts/services/$service/$service.service /lib/systemd/system
      sudo systemctl enable $service.service
      sudo systemctl start $service.service
    else 
      echo "$service.service already installed"
    fi
  fi
done
echo "------------------------------------------"

################################################################################################
## Don't overwrite settings unless required (un comment if required)
# echo "Copy new default.emonpi.settings.php to settings.php & make backup old.emonpi.settings.php"
# sudo cp $emoncms_dir/settings.php $emoncms_dir/old.settings.php
# sudo cp $emoncms_dir/default.emonpi.settings.php $emoncms_dir/settings.php

#if [ "$emonSD_pi_env" = "1" ]; then 
echo "Update Emoncms database"
php $homedir/emonpi/emoncmsdbupdate.php
echo
#fi

echo "Restarting Services..."
if [ -d /lib/systemd/system ]; then
  sudo systemctl daemon-reload
fi

for service in "feedwriter" "mqtt_input" "emoncms_mqtt" "emoncms-nodes-service" "emonhub" "openhab"; do
  if [ -f /lib/systemd/system/$service.service ]; then
    echo "- sudo systemctl restart $service.service"
    sudo systemctl restart $service.service
    state=$(systemctl show $service | grep ActiveState)
    echo "--- $state ---"
  elif [ -f /etc/init.d/$service ]; then
    echo "- sudo /etc/init.d/$service restart"
    sudo /etc/init.d/$service restart
    sudo /etc/init.d/$service status
  fi
done

###################################################################################
# Intalll log rotate config
###################################################################################
echo "Installing emoncms logrotate..."
echo

# Remove already roated old log files to free up space incase /var/log is full
if ls /var/log/syslog.* > /dev/null 2>&1; then
  sudo rm /var/log/syslog.*
fi

if ls /var/log/*.log.* > /dev/null 2>&1; then
  sudo rm /var/log/*.log.*
fi

# Install emonPi log rotate config
sudo /var/www/emoncms/scripts/logger/install.sh
# Run log roate manually
echo "Running logrotate..."
sudo /usr/sbin/logrotate -v -s /var/log/logrotate/logrotate.status /etc/logrotate.conf > /dev/null 2>&1












# Reload rather than restart apache so we dont loose the interface 
sudo service apache2 reload 
echo
if [ "$emonSD_pi_env" = "1" ]; then 
  echo "set log rotate config owner to root"
  sudo chown root:root /etc/logrotate.conf
fi
echo
echo "------------------------------------------"
echo "Emoncms update script complete"
echo "------------------------------------------"

